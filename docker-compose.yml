version: '3.8'  # 最新のバージョンを使用することを推奨

services:
  backend-local:
    build: ./backend
    ports:
      - '5050:5050'  # ローカルDB用のポート
    env_file:
      - ./.env
    networks:
      - app-network
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - SERVER_PORT=5050
      - CONNECTION_TYPE=local

  backend-rds:
    build: ./backend
    ports:
      - '5050:5050'  # AWS RDS用のポート
    env_file:
      - ./.env
    networks:
      - app-network
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - DB_HOST=${AWS_RDS_HOST}
      - DB_PORT=${AWS_RDS_PORT}
      - DB_USER=${AWS_RDS_USER}
      - DB_PASSWORD=${AWS_RDS_PASSWORD}
      - DB_NAME=${AWS_RDS_DB_NAME}
      - SERVER_PORT=5051
      - CONNECTION_TYPE=rds

  frontend:
    build: ./study-support-app
    ports:
      - '3000:3000'
    depends_on:
      - backend-local
      - backend-rds
    networks:
      - app-network
    volumes:
      - ./study-support-app:/app
    env_file:
      - ./.env
    restart: always
    command: npm run dev
    environment:
      - PORT=3000
      - HOST=0.0.0.0
      - NEXT_PUBLIC_API_BASE_URL=http://localhost:5050

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5020:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-demo}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
