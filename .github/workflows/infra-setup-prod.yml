name: PROD Terraform Infra Setup

on:
  workflow_dispatch: # 手動実行のみを想定

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: Production # 本番環境を指定 (GitHub Environments で承認設定を推奨)
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }} # 本番用 AWS Credential を設定してください
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # 本番用 AWS Credential を設定してください
          aws-region:            ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.0' # 必要に応じてバージョンを更新してください

      - name: Terraform Init
        working-directory: infrastructure/terraform/prod
        run: terraform init -upgrade -input=false

      - name: Terraform Plan
        working-directory: infrastructure/terraform/prod
        env:
          # ★★★ 本番用のシークレット名を指定してください ★★★
          TF_VAR_db_password:   ${{ secrets.DB_PASSWORD }}
          TF_VAR_api_base_url:  ${{ secrets.API_BASE_URL }}
          TF_VAR_environment:   "prod" # <- 環境名を明示的に指定
        run: terraform plan -input=false -out=tfplan

      - name: Terraform State MV (Temporary for VPC migration)
        if: steps.plan.outcome == 'success' # planが成功した場合のみ実行
        working-directory: infrastructure/terraform/prod
        run: |
          echo "Executing terraform state mv commands..."
          terraform state mv 'aws_lb_target_group.backend' 'aws_lb_target_group.backend'
          terraform state mv 'aws_lb_target_group.frontend' 'aws_lb_target_group.frontend'
          terraform state mv 'aws_security_group.app' 'aws_security_group.app'
          terraform state mv 'aws_security_group.rds' 'aws_security_group.rds'
          terraform state mv 'aws_security_group.vpc_endpoint' 'aws_security_group.vpc_endpoint'
          terraform state mv 'aws_vpc_endpoint.ecr_api' 'aws_vpc_endpoint.ecr_api'
          terraform state mv 'aws_vpc_endpoint.ecr_dkr' 'aws_vpc_endpoint.ecr_dkr'
          terraform state mv 'aws_vpc_endpoint.logs' 'aws_vpc_endpoint.logs'
          terraform state mv 'aws_vpc_endpoint.s3_gateway' 'aws_vpc_endpoint.s3_gateway'
          terraform state mv 'aws_vpc_endpoint.secretsmanager' 'aws_vpc_endpoint.secretsmanager'
          echo "State MV commands completed."

      - name: Terraform Apply (Requires manual approval)
        working-directory: infrastructure/terraform/prod
        env:
          # ★★★ 本番用のシークレット名を指定してください ★★★
          TF_VAR_db_password:   ${{ secrets.DB_PASSWORD }}
          TF_VAR_api_base_url:  ${{ secrets.API_BASE_URL }}
          TF_VAR_environment:   "prod" # <- 環境名を明示的に指定
        # apply コマンドから -auto-approve を削除
        # GitHub Environments の承認機能を利用して手動承認後に実行されることを想定
        run: terraform apply -input=false tfplan 