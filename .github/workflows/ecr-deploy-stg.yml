name: Build & Push STG Docker Images to ECR

on:
  push:
    branches:
      - stg
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.AWS_ECR_REGISTRY }}

jobs:
  # Backend STG イメージのビルド & プッシュ
  build-push-backend-stg:
    environment: Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build STG backend image
        run: |
          REGISTRY=$(echo "${{ secrets.AWS_ECR_REGISTRY }}" | sed 's:/*$::')
          IMAGE_URI="${REGISTRY}/stg-backend:latest"
          docker build \
            --file backend/Dockerfile.stg \
            --tag  $IMAGE_URI \
            backend

      - name: Push STG backend to ECR
        run: |
          REGISTRY=$(echo "${{ secrets.AWS_ECR_REGISTRY }}" | sed 's:/*$::')
          docker push ${REGISTRY}/stg-backend:latest

  # Frontend STG イメージのビルド & プッシュ
  build-push-frontend-stg:
    environment: Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build STG frontend image
        run: |
          REGISTRY=$(echo "${{ secrets.AWS_ECR_REGISTRY }}" | sed 's:/*$::')
          IMAGE_URI="${REGISTRY}/stg-frontend:latest"
          docker build \
            --file study-support-app/Dockerfile.stg \
            --tag  $IMAGE_URI \
            study-support-app

      - name: Push STG frontend to ECR
        run: |
          REGISTRY=$(echo "${{ secrets.AWS_ECR_REGISTRY }}" | sed 's:/*$::')
          docker push ${REGISTRY}/stg-frontend:latest

  deploy-backend-stg:
    needs: build-push-backend-stg
    environment: Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}
      - name: Deploy Backend to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: stg-api
          service: stg-api-service
          task-definition: AWS/backend-task-def-stg.json
          wait-for-service-stability: true

  deploy-frontend-stg:
    needs: build-push-frontend-stg
    environment: Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}
      - name: Deploy Frontend to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          cluster: stg-front
          service: stg-front-service
          task-definition: AWS/frontend-task-def-stg.json
          wait-for-service-stability: true 